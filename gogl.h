#if defined(__APPLE__)
#include <dlfcn.h>
#elif defined(_WIN32)
#define WIN32_LEAN_AND_MEAN 1
#include <windows.h>
#else
#include <X11/Xlib.h>
#endif

#ifndef APIENTRY
#define APIENTRY
#endif
#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif
#ifndef GLAPI
#define GLAPI extern
#endif

 #include <stddef.h>
 #ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif
 typedef unsigned int GLenum;
 typedef unsigned char GLboolean;
 typedef unsigned int GLbitfield;
 typedef void GLvoid;
 typedef signed char GLbyte;
 typedef short GLshort;
 typedef int GLint;
 typedef int GLclampx;
 typedef unsigned char GLubyte;
 typedef unsigned short GLushort;
 typedef unsigned int GLuint;
 typedef int GLsizei;
 typedef float GLfloat;
 typedef float GLclampf;
 typedef double GLdouble;
 typedef double GLclampd;
 typedef void *GLeglImageOES;
 typedef char GLchar;
 typedef char GLcharARB;
 #ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
 typedef unsigned short GLhalfARB;
 typedef unsigned short GLhalf;
/* Must be 32 bits */
 typedef GLint GLfixed;
 typedef ptrdiff_t GLintptr;
 typedef ptrdiff_t GLsizeiptr;
 typedef int64_t GLint64;
 typedef uint64_t GLuint64;
 typedef ptrdiff_t GLintptrARB;
 typedef ptrdiff_t GLsizeiptrARB;
 typedef int64_t GLint64EXT;
 typedef uint64_t GLuint64EXT;
 typedef struct __GLsync *GLsync;
/* compatible with OpenCL cl_context */
 struct _cl_context;
/* compatible with OpenCL cl_event */
 struct _cl_event;
 typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
 typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
 typedef void (APIENTRY *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
 typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
 typedef unsigned short GLhalfNV;
 typedef GLintptr GLvdpauSurfaceNV;

#ifdef _WIN32
static HMODULE opengl32 = NULL;
#endif

void goglAccum(GLenum op, GLfloat value);
void goglActiveTexture(GLenum texture);
void goglAlphaFunc(GLenum func, GLfloat ref);
void goglAlphaFuncx(GLenum func, GLfixed ref);
GLboolean goglAreTexturesResident(GLsizei n, const GLuint* textures, GLboolean* residences);
void goglArrayElement(GLint i);
void goglAttachShader(GLuint program, GLuint shader);
void goglBegin(GLenum mode);
void goglBeginQuery(GLenum target, GLuint id);
void goglBindAttribLocation(GLuint program, GLuint index, const GLchar* name);
void goglBindBuffer(GLenum target, GLuint buffer);
void goglBindVertexArray(GLuint array);
void goglBindFramebuffer(GLenum target, GLuint framebuffer);
void goglBindRenderbuffer(GLenum target, GLuint renderbuffer);
void goglBindTexture(GLenum target, GLuint texture);
void goglBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte* bitmap);
void goglBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void goglBlendEquation(GLenum mode);
void goglBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
void goglBlendFunc(GLenum sfactor, GLenum dfactor);
void goglBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void goglBufferData(GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
void goglBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
void goglCallList(GLuint list);
void goglCallLists(GLsizei n, GLenum type, const GLvoid* lists);
GLenum goglCheckFramebufferStatus(GLenum target);
void goglClear(GLbitfield mask);
void goglClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void goglClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void goglClearColorx(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void goglClearDepth(GLdouble depth);
void goglClearDepthf(GLfloat d);
void goglClearDepthx(GLfixed depth);
void goglClearIndex(GLfloat c);
void goglClearStencil(GLint s);
void goglClientActiveTexture(GLenum texture);
void goglClipPlane(GLenum plane, const GLdouble* equation);
void goglClipPlanef(GLenum p, const GLfloat* eqn);
void goglClipPlanex(GLenum plane, const GLfixed* equation);
void goglColor3b(GLbyte red, GLbyte green, GLbyte blue);
void goglColor3bv(const GLbyte* v);
void goglColor3d(GLdouble red, GLdouble green, GLdouble blue);
void goglColor3dv(const GLdouble* v);
void goglColor3f(GLfloat red, GLfloat green, GLfloat blue);
void goglColor3fv(const GLfloat* v);
void goglColor3i(GLint red, GLint green, GLint blue);
void goglColor3iv(const GLint* v);
void goglColor3s(GLshort red, GLshort green, GLshort blue);
void goglColor3sv(const GLshort* v);
void goglColor3ub(GLubyte red, GLubyte green, GLubyte blue);
void goglColor3ubv(const GLubyte* v);
void goglColor3ui(GLuint red, GLuint green, GLuint blue);
void goglColor3uiv(const GLuint* v);
void goglColor3us(GLushort red, GLushort green, GLushort blue);
void goglColor3usv(const GLushort* v);
void goglColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void goglColor4bv(const GLbyte* v);
void goglColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void goglColor4dv(const GLdouble* v);
void goglColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void goglColor4fv(const GLfloat* v);
void goglColor4i(GLint red, GLint green, GLint blue, GLint alpha);
void goglColor4iv(const GLint* v);
void goglColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha);
void goglColor4sv(const GLshort* v);
void goglColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void goglColor4ubv(const GLubyte* v);
void goglColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha);
void goglColor4uiv(const GLuint* v);
void goglColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha);
void goglColor4usv(const GLushort* v);
void goglColor4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void goglColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void goglColorMaterial(GLenum face, GLenum mode);
void goglColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
void goglCompileShader(GLuint shader);
void goglCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid* data);
void goglCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data);
void goglCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);
void goglCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid* data);
void goglCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data);
void goglCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);
void goglCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void goglCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void goglCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void goglCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void goglCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void goglCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLuint goglCreateProgram();
GLuint goglCreateShader(GLenum type);
void goglCullFace(GLenum mode);
void goglDeleteBuffers(GLsizei n, const GLuint* buffers);
void goglDeleteVertexArrays(GLsizei n, const GLuint* arrays);
void goglDeleteFramebuffers(GLsizei n, const GLuint* framebuffers);
void goglDeleteLists(GLuint list, GLsizei range);
void goglDeleteProgram(GLuint program);
void goglDeleteQueries(GLsizei n, const GLuint* ids);
void goglDeleteRenderbuffers(GLsizei n, const GLuint* renderbuffers);
void goglDeleteShader(GLuint shader);
void goglDeleteTextures(GLsizei n, const GLuint* textures);
void goglDepthFunc(GLenum func);
void goglDepthMask(GLboolean flag);
void goglDepthRange(GLdouble near, GLdouble far);
void goglDepthRangef(GLfloat n, GLfloat f);
void goglDepthRangex(GLfixed n, GLfixed f);
void goglDetachShader(GLuint program, GLuint shader);
void goglDisable(GLenum cap);
void goglDisableClientState(GLenum array);
void goglDisableVertexAttribArray(GLuint index);
void goglDrawArrays(GLenum mode, GLint first, GLsizei count);
void goglDrawBuffer(GLenum mode);
void goglDrawBuffers(GLsizei n, const GLenum* bufs);
void goglDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);
void goglDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices, GLint base);
void goglDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);
void goglDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid* indices);
void goglEdgeFlag(GLboolean flag);
void goglEdgeFlagPointer(GLsizei stride, const GLvoid* pointer);
void goglEdgeFlagv(const GLboolean* flag);
void goglEnable(GLenum cap);
void goglEnableClientState(GLenum array);
void goglEnableVertexAttribArray(GLuint index);
void goglEnd();
void goglEndList();
void goglEndQuery(GLenum target);
void goglEvalCoord1d(GLdouble u);
void goglEvalCoord1dv(const GLdouble* u);
void goglEvalCoord1f(GLfloat u);
void goglEvalCoord1fv(const GLfloat* u);
void goglEvalCoord2d(GLdouble u, GLdouble v);
void goglEvalCoord2dv(const GLdouble* u);
void goglEvalCoord2f(GLfloat u, GLfloat v);
void goglEvalCoord2fv(const GLfloat* u);
void goglEvalMesh1(GLenum mode, GLint i1, GLint i2);
void goglEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void goglEvalPoint1(GLint i);
void goglEvalPoint2(GLint i, GLint j);
void goglFeedbackBuffer(GLsizei size, GLenum type, GLfloat* buffer);
void goglFinish();
void goglFlush();
void goglFogCoordPointer(GLenum type, GLsizei stride, const GLvoid* pointer);
void goglFogCoordd(GLdouble coord);
void goglFogCoorddv(const GLdouble* coord);
void goglFogCoordf(GLfloat coord);
void goglFogCoordfv(const GLfloat* coord);
void goglFogf(GLenum pname, GLfloat param);
void goglFogfv(GLenum pname, const GLfloat* params);
void goglFogi(GLenum pname, GLint param);
void goglFogiv(GLenum pname, const GLint* params);
void goglFogx(GLenum pname, GLfixed param);
void goglFogxv(GLenum pname, const GLfixed* param);
void goglFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void goglFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void goglFrontFace(GLenum mode);
void goglFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void goglFrustumf(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void goglFrustumx(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void goglGenBuffers(GLsizei n, GLuint* buffers);
void goglGenFramebuffers(GLsizei n, GLuint* framebuffers);
void goglGenVertexArrays(GLsizei n, GLuint* vertexarrays);
GLuint goglGenLists(GLsizei range);
void goglGenQueries(GLsizei n, GLuint* ids);
void goglGenRenderbuffers(GLsizei n, GLuint* renderbuffers);
void goglGenTextures(GLsizei n, GLuint* textures);
void goglGenerateMipmap(GLenum target);
void goglGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void goglGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
void goglGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
GLint goglGetAttribLocation(GLuint program, const GLchar* name);
void goglGetBooleanv(GLenum pname, GLboolean* params);
void goglGetBufferParameteriv(GLenum target, GLenum pname, GLint* params);
void goglGetBufferPointerv(GLenum target, GLenum pname, GLvoid** params);
void goglGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
void goglGetClipPlane(GLenum plane, GLdouble* equation);
void goglGetClipPlanef(GLenum plane, GLfloat* equation);
void goglGetClipPlanex(GLenum plane, GLfixed* equation);
void goglGetCompressedTexImage(GLenum target, GLint level, GLvoid* img);
void goglGetDoublev(GLenum pname, GLdouble* params);
GLenum goglGetError();
void goglGetFixedv(GLenum pname, GLfixed* params);
void goglGetFloatv(GLenum pname, GLfloat* params);
void goglGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint* params);
void goglGetIntegerv(GLenum pname, GLint* params);
void goglGetLightfv(GLenum light, GLenum pname, GLfloat* params);
void goglGetLightiv(GLenum light, GLenum pname, GLint* params);
void goglGetLightxv(GLenum light, GLenum pname, GLfixed* params);
void goglGetMapdv(GLenum target, GLenum query, GLdouble* v);
void goglGetMapfv(GLenum target, GLenum query, GLfloat* v);
void goglGetMapiv(GLenum target, GLenum query, GLint* v);
void goglGetMaterialfv(GLenum face, GLenum pname, GLfloat* params);
void goglGetMaterialiv(GLenum face, GLenum pname, GLint* params);
void goglGetMaterialxv(GLenum face, GLenum pname, GLfixed* params);
void goglGetPixelMapfv(GLenum map, GLfloat* values);
void goglGetPixelMapuiv(GLenum map, GLuint* values);
void goglGetPixelMapusv(GLenum map, GLushort* values);
void goglGetPointerv(GLenum pname, GLvoid** params);
void goglGetPolygonStipple(GLubyte* mask);
void goglGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
void goglGetProgramiv(GLuint program, GLenum pname, GLint* params);
void goglGetQueryObjectiv(GLuint id, GLenum pname, GLint* params);
void goglGetQueryObjectuiv(GLuint id, GLenum pname, GLuint* params);
void goglGetQueryiv(GLenum target, GLenum pname, GLint* params);
void goglGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint* params);
void goglGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
void goglGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
void goglGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
void goglGetShaderiv(GLuint shader, GLenum pname, GLint* params);
const GLubyte* goglGetString(GLenum name);
void goglGetTexEnvfv(GLenum target, GLenum pname, GLfloat* params);
void goglGetTexEnviv(GLenum target, GLenum pname, GLint* params);
void goglGetTexEnvxv(GLenum target, GLenum pname, GLfixed* params);
void goglGetTexGendv(GLenum coord, GLenum pname, GLdouble* params);
void goglGetTexGenfv(GLenum coord, GLenum pname, GLfloat* params);
void goglGetTexGeniv(GLenum coord, GLenum pname, GLint* params);
void goglGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid* pixels);
void goglGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat* params);
void goglGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint* params);
void goglGetTexParameterfv(GLenum target, GLenum pname, GLfloat* params);
void goglGetTexParameteriv(GLenum target, GLenum pname, GLint* params);
void goglGetTexParameterxv(GLenum target, GLenum pname, GLfixed* params);
GLint goglGetUniformLocation(GLuint program, const GLchar* name);
void goglGetUniformfv(GLuint program, GLint location, GLfloat* params);
void goglGetUniformiv(GLuint program, GLint location, GLint* params);
void goglGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid** pointer);
void goglGetVertexAttribdv(GLuint index, GLenum pname, GLdouble* params);
void goglGetVertexAttribfv(GLuint index, GLenum pname, GLfloat* params);
void goglGetVertexAttribiv(GLuint index, GLenum pname, GLint* params);
void goglHint(GLenum target, GLenum mode);
void goglIndexMask(GLuint mask);
void goglIndexPointer(GLenum type, GLsizei stride, const GLvoid* pointer);
void goglIndexd(GLdouble c);
void goglIndexdv(const GLdouble* c);
void goglIndexf(GLfloat c);
void goglIndexfv(const GLfloat* c);
void goglIndexi(GLint c);
void goglIndexiv(const GLint* c);
void goglIndexs(GLshort c);
void goglIndexsv(const GLshort* c);
void goglIndexub(GLubyte c);
void goglIndexubv(const GLubyte* c);
void goglInitNames();
void goglInterleavedArrays(GLenum format, GLsizei stride, const GLvoid* pointer);
GLboolean goglIsBuffer(GLuint buffer);
GLboolean goglIsEnabled(GLenum cap);
GLboolean goglIsFramebuffer(GLuint framebuffer);
GLboolean goglIsList(GLuint list);
GLboolean goglIsProgram(GLuint program);
GLboolean goglIsQuery(GLuint id);
GLboolean goglIsRenderbuffer(GLuint renderbuffer);
GLboolean goglIsShader(GLuint shader);
GLboolean goglIsTexture(GLuint texture);
void goglLightModelf(GLenum pname, GLfloat param);
void goglLightModelfv(GLenum pname, const GLfloat* params);
void goglLightModeli(GLenum pname, GLint param);
void goglLightModeliv(GLenum pname, const GLint* params);
void goglLightModelx(GLenum pname, GLfixed param);
void goglLightModelxv(GLenum pname, const GLfixed* param);
void goglLightf(GLenum light, GLenum pname, GLfloat param);
void goglLightfv(GLenum light, GLenum pname, const GLfloat* params);
void goglLighti(GLenum light, GLenum pname, GLint param);
void goglLightiv(GLenum light, GLenum pname, const GLint* params);
void goglLightx(GLenum light, GLenum pname, GLfixed param);
void goglLightxv(GLenum light, GLenum pname, const GLfixed* params);
void goglLineStipple(GLint factor, GLushort pattern);
void goglLineWidth(GLfloat width);
void goglLineWidthx(GLfixed width);
void goglLinkProgram(GLuint program);
void goglListBase(GLuint base);
void goglLoadIdentity();
void goglLoadMatrixd(const GLdouble* m);
void goglLoadMatrixf(const GLfloat* m);
void goglLoadMatrixx(const GLfixed* m);
void goglLoadName(GLuint name);
void goglLoadTransposeMatrixd(const GLdouble* m);
void goglLoadTransposeMatrixf(const GLfloat* m);
void goglLogicOp(GLenum opcode);
void goglMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble* points);
void goglMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat* points);
void goglMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble* points);
void goglMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat* points);
void* goglMapBuffer(GLenum target, GLenum access);
void goglMapGrid1d(GLint un, GLdouble u1, GLdouble u2);
void goglMapGrid1f(GLint un, GLfloat u1, GLfloat u2);
void goglMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void goglMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void goglMaterialf(GLenum face, GLenum pname, GLfloat param);
void goglMaterialfv(GLenum face, GLenum pname, const GLfloat* params);
void goglMateriali(GLenum face, GLenum pname, GLint param);
void goglMaterialiv(GLenum face, GLenum pname, const GLint* params);
void goglMaterialx(GLenum face, GLenum pname, GLfixed param);
void goglMaterialxv(GLenum face, GLenum pname, const GLfixed* param);
void goglMatrixMode(GLenum mode);
void goglMultMatrixd(const GLdouble* m);
void goglMultMatrixf(const GLfloat* m);
void goglMultMatrixx(const GLfixed* m);
void goglMultTransposeMatrixd(const GLdouble* m);
void goglMultTransposeMatrixf(const GLfloat* m);
void goglMultiDrawArrays(GLenum mode, const GLint* first, const GLsizei* count, GLsizei drawcount);
void goglMultiDrawElements(GLenum mode, const GLsizei* count, GLenum type, const GLvoid** indices, GLsizei drawcount);
void goglMultiTexCoord1d(GLenum target, GLdouble s);
void goglMultiTexCoord1dv(GLenum target, const GLdouble* v);
void goglMultiTexCoord1f(GLenum target, GLfloat s);
void goglMultiTexCoord1fv(GLenum target, const GLfloat* v);
void goglMultiTexCoord1i(GLenum target, GLint s);
void goglMultiTexCoord1iv(GLenum target, const GLint* v);
void goglMultiTexCoord1s(GLenum target, GLshort s);
void goglMultiTexCoord1sv(GLenum target, const GLshort* v);
void goglMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t);
void goglMultiTexCoord2dv(GLenum target, const GLdouble* v);
void goglMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t);
void goglMultiTexCoord2fv(GLenum target, const GLfloat* v);
void goglMultiTexCoord2i(GLenum target, GLint s, GLint t);
void goglMultiTexCoord2iv(GLenum target, const GLint* v);
void goglMultiTexCoord2s(GLenum target, GLshort s, GLshort t);
void goglMultiTexCoord2sv(GLenum target, const GLshort* v);
void goglMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r);
void goglMultiTexCoord3dv(GLenum target, const GLdouble* v);
void goglMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r);
void goglMultiTexCoord3fv(GLenum target, const GLfloat* v);
void goglMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r);
void goglMultiTexCoord3iv(GLenum target, const GLint* v);
void goglMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r);
void goglMultiTexCoord3sv(GLenum target, const GLshort* v);
void goglMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void goglMultiTexCoord4dv(GLenum target, const GLdouble* v);
void goglMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void goglMultiTexCoord4fv(GLenum target, const GLfloat* v);
void goglMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q);
void goglMultiTexCoord4iv(GLenum target, const GLint* v);
void goglMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void goglMultiTexCoord4sv(GLenum target, const GLshort* v);
void goglMultiTexCoord4x(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void goglNewList(GLuint list, GLenum mode);
void goglNormal3b(GLbyte nx, GLbyte ny, GLbyte nz);
void goglNormal3bv(const GLbyte* v);
void goglNormal3d(GLdouble nx, GLdouble ny, GLdouble nz);
void goglNormal3dv(const GLdouble* v);
void goglNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
void goglNormal3fv(const GLfloat* v);
void goglNormal3i(GLint nx, GLint ny, GLint nz);
void goglNormal3iv(const GLint* v);
void goglNormal3s(GLshort nx, GLshort ny, GLshort nz);
void goglNormal3sv(const GLshort* v);
void goglNormal3x(GLfixed nx, GLfixed ny, GLfixed nz);
void goglNormalPointer(GLenum type, GLsizei stride, const GLvoid* pointer);
void goglOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void goglOrthof(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void goglOrthox(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void goglPassThrough(GLfloat token);
void goglPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat* values);
void goglPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint* values);
void goglPixelMapusv(GLenum map, GLsizei mapsize, const GLushort* values);
void goglPixelStoref(GLenum pname, GLfloat param);
void goglPixelStorei(GLenum pname, GLint param);
void goglPixelTransferf(GLenum pname, GLfloat param);
void goglPixelTransferi(GLenum pname, GLint param);
void goglPixelZoom(GLfloat xfactor, GLfloat yfactor);
void goglPointParameterf(GLenum pname, GLfloat param);
void goglPointParameterfv(GLenum pname, const GLfloat* params);
void goglPointParameteri(GLenum pname, GLint param);
void goglPointParameteriv(GLenum pname, const GLint* params);
void goglPointParameterx(GLenum pname, GLfixed param);
void goglPointParameterxv(GLenum pname, const GLfixed* params);
void goglPointSize(GLfloat size);
void goglPointSizex(GLfixed size);
void goglPolygonMode(GLenum face, GLenum mode);
void goglPolygonOffset(GLfloat factor, GLfloat units);
void goglPolygonOffsetx(GLfixed factor, GLfixed units);
void goglPolygonStipple(const GLubyte* mask);
void goglPopAttrib();
void goglPopClientAttrib();
void goglPopMatrix();
void goglPopName();
void goglPrioritizeTextures(GLsizei n, const GLuint* textures, const GLfloat* priorities);
void goglPushAttrib(GLbitfield mask);
void goglPushClientAttrib(GLbitfield mask);
void goglPushMatrix();
void goglPushName(GLuint name);
void goglRasterPos2d(GLdouble x, GLdouble y);
void goglRasterPos2dv(const GLdouble* v);
void goglRasterPos2f(GLfloat x, GLfloat y);
void goglRasterPos2fv(const GLfloat* v);
void goglRasterPos2i(GLint x, GLint y);
void goglRasterPos2iv(const GLint* v);
void goglRasterPos2s(GLshort x, GLshort y);
void goglRasterPos2sv(const GLshort* v);
void goglRasterPos3d(GLdouble x, GLdouble y, GLdouble z);
void goglRasterPos3dv(const GLdouble* v);
void goglRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
void goglRasterPos3fv(const GLfloat* v);
void goglRasterPos3i(GLint x, GLint y, GLint z);
void goglRasterPos3iv(const GLint* v);
void goglRasterPos3s(GLshort x, GLshort y, GLshort z);
void goglRasterPos3sv(const GLshort* v);
void goglRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void goglRasterPos4dv(const GLdouble* v);
void goglRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void goglRasterPos4fv(const GLfloat* v);
void goglRasterPos4i(GLint x, GLint y, GLint z, GLint w);
void goglRasterPos4iv(const GLint* v);
void goglRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
void goglRasterPos4sv(const GLshort* v);
void goglReadBuffer(GLenum mode);
void goglReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
void goglRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void goglRectdv(const GLdouble* v1, const GLdouble* v2);
void goglRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void goglRectfv(const GLfloat* v1, const GLfloat* v2);
void goglRecti(GLint x1, GLint y1, GLint x2, GLint y2);
void goglRectiv(const GLint* v1, const GLint* v2);
void goglRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void goglRectsv(const GLshort* v1, const GLshort* v2);
void goglReleaseShaderCompiler();
GLint goglRenderMode(GLenum mode);
void goglRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void goglRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void goglRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void goglRotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
void goglSampleCoverage(GLfloat value, GLboolean invert);
void goglSampleCoveragex(GLclampx value, GLboolean invert);
void goglScaled(GLdouble x, GLdouble y, GLdouble z);
void goglScalef(GLfloat x, GLfloat y, GLfloat z);
void goglScalex(GLfixed x, GLfixed y, GLfixed z);
void goglScissor(GLint x, GLint y, GLsizei width, GLsizei height);
void goglSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue);
void goglSecondaryColor3bv(const GLbyte* v);
void goglSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue);
void goglSecondaryColor3dv(const GLdouble* v);
void goglSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue);
void goglSecondaryColor3fv(const GLfloat* v);
void goglSecondaryColor3i(GLint red, GLint green, GLint blue);
void goglSecondaryColor3iv(const GLint* v);
void goglSecondaryColor3s(GLshort red, GLshort green, GLshort blue);
void goglSecondaryColor3sv(const GLshort* v);
void goglSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue);
void goglSecondaryColor3ubv(const GLubyte* v);
void goglSecondaryColor3ui(GLuint red, GLuint green, GLuint blue);
void goglSecondaryColor3uiv(const GLuint* v);
void goglSecondaryColor3us(GLushort red, GLushort green, GLushort blue);
void goglSecondaryColor3usv(const GLushort* v);
void goglSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
void goglSelectBuffer(GLsizei size, GLuint* buffer);
void goglShadeModel(GLenum mode);
void goglShaderBinary(GLsizei count, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length);
void goglShaderSource(GLuint shader, GLsizei count, const GLchar** string, const GLint* length);
void goglStencilFunc(GLenum func, GLint ref, GLuint mask);
void goglStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
void goglStencilMask(GLuint mask);
void goglStencilMaskSeparate(GLenum face, GLuint mask);
void goglStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
void goglStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void goglTexCoord1d(GLdouble s);
void goglTexCoord1dv(const GLdouble* v);
void goglTexCoord1f(GLfloat s);
void goglTexCoord1fv(const GLfloat* v);
void goglTexCoord1i(GLint s);
void goglTexCoord1iv(const GLint* v);
void goglTexCoord1s(GLshort s);
void goglTexCoord1sv(const GLshort* v);
void goglTexCoord2d(GLdouble s, GLdouble t);
void goglTexCoord2dv(const GLdouble* v);
void goglTexCoord2f(GLfloat s, GLfloat t);
void goglTexCoord2fv(const GLfloat* v);
void goglTexCoord2i(GLint s, GLint t);
void goglTexCoord2iv(const GLint* v);
void goglTexCoord2s(GLshort s, GLshort t);
void goglTexCoord2sv(const GLshort* v);
void goglTexCoord3d(GLdouble s, GLdouble t, GLdouble r);
void goglTexCoord3dv(const GLdouble* v);
void goglTexCoord3f(GLfloat s, GLfloat t, GLfloat r);
void goglTexCoord3fv(const GLfloat* v);
void goglTexCoord3i(GLint s, GLint t, GLint r);
void goglTexCoord3iv(const GLint* v);
void goglTexCoord3s(GLshort s, GLshort t, GLshort r);
void goglTexCoord3sv(const GLshort* v);
void goglTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void goglTexCoord4dv(const GLdouble* v);
void goglTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void goglTexCoord4fv(const GLfloat* v);
void goglTexCoord4i(GLint s, GLint t, GLint r, GLint q);
void goglTexCoord4iv(const GLint* v);
void goglTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
void goglTexCoord4sv(const GLshort* v);
void goglTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
void goglTexEnvf(GLenum target, GLenum pname, GLfloat param);
void goglTexEnvfv(GLenum target, GLenum pname, const GLfloat* params);
void goglTexEnvi(GLenum target, GLenum pname, GLint param);
void goglTexEnviv(GLenum target, GLenum pname, const GLint* params);
void goglTexEnvx(GLenum target, GLenum pname, GLfixed param);
void goglTexEnvxv(GLenum target, GLenum pname, const GLfixed* params);
void goglTexGend(GLenum coord, GLenum pname, GLdouble param);
void goglTexGendv(GLenum coord, GLenum pname, const GLdouble* params);
void goglTexGenf(GLenum coord, GLenum pname, GLfloat param);
void goglTexGenfv(GLenum coord, GLenum pname, const GLfloat* params);
void goglTexGeni(GLenum coord, GLenum pname, GLint param);
void goglTexGeniv(GLenum coord, GLenum pname, const GLint* params);
void goglTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
void goglTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
void goglTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
void goglTexParameterf(GLenum target, GLenum pname, GLfloat param);
void goglTexParameterfv(GLenum target, GLenum pname, const GLfloat* params);
void goglTexParameteri(GLenum target, GLenum pname, GLint param);
void goglTexParameteriv(GLenum target, GLenum pname, const GLint* params);
void goglTexParameterx(GLenum target, GLenum pname, GLfixed param);
void goglTexParameterxv(GLenum target, GLenum pname, const GLfixed* params);
void goglTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid* pixels);
void goglTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);
void goglTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels);
void goglTranslated(GLdouble x, GLdouble y, GLdouble z);
void goglTranslatef(GLfloat x, GLfloat y, GLfloat z);
void goglTranslatex(GLfixed x, GLfixed y, GLfixed z);
void goglUniform1f(GLint location, GLfloat v0);
void goglUniform1fv(GLint location, GLsizei count, const GLfloat* value);
void goglUniform1i(GLint location, GLint v0);
void goglUniform1iv(GLint location, GLsizei count, const GLint* value);
void goglUniform2f(GLint location, GLfloat v0, GLfloat v1);
void goglUniform2fv(GLint location, GLsizei count, const GLfloat* value);
void goglUniform2i(GLint location, GLint v0, GLint v1);
void goglUniform2iv(GLint location, GLsizei count, const GLint* value);
void goglUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void goglUniform3fv(GLint location, GLsizei count, const GLfloat* value);
void goglUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
void goglUniform3iv(GLint location, GLsizei count, const GLint* value);
void goglUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void goglUniform4fv(GLint location, GLsizei count, const GLfloat* value);
void goglUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void goglUniform4iv(GLint location, GLsizei count, const GLint* value);
void goglUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void goglUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
void goglUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
GLboolean goglUnmapBuffer(GLenum target);
void goglUseProgram(GLuint program);
void goglValidateProgram(GLuint program);
void goglVertex2d(GLdouble x, GLdouble y);
void goglVertex2dv(const GLdouble* v);
void goglVertex2f(GLfloat x, GLfloat y);
void goglVertex2fv(const GLfloat* v);
void goglVertex2i(GLint x, GLint y);
void goglVertex2iv(const GLint* v);
void goglVertex2s(GLshort x, GLshort y);
void goglVertex2sv(const GLshort* v);
void goglVertex3d(GLdouble x, GLdouble y, GLdouble z);
void goglVertex3dv(const GLdouble* v);
void goglVertex3f(GLfloat x, GLfloat y, GLfloat z);
void goglVertex3fv(const GLfloat* v);
void goglVertex3i(GLint x, GLint y, GLint z);
void goglVertex3iv(const GLint* v);
void goglVertex3s(GLshort x, GLshort y, GLshort z);
void goglVertex3sv(const GLshort* v);
void goglVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void goglVertex4dv(const GLdouble* v);
void goglVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void goglVertex4fv(const GLfloat* v);
void goglVertex4i(GLint x, GLint y, GLint z, GLint w);
void goglVertex4iv(const GLint* v);
void goglVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
void goglVertex4sv(const GLshort* v);
void goglVertexAttrib1d(GLuint index, GLdouble x);
void goglVertexAttrib1dv(GLuint index, const GLdouble* v);
void goglVertexAttrib1f(GLuint index, GLfloat x);
void goglVertexAttrib1fv(GLuint index, const GLfloat* v);
void goglVertexAttrib1s(GLuint index, GLshort x);
void goglVertexAttrib1sv(GLuint index, const GLshort* v);
void goglVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
void goglVertexAttrib2dv(GLuint index, const GLdouble* v);
void goglVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
void goglVertexAttrib2fv(GLuint index, const GLfloat* v);
void goglVertexAttrib2s(GLuint index, GLshort x, GLshort y);
void goglVertexAttrib2sv(GLuint index, const GLshort* v);
void goglVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void goglVertexAttrib3dv(GLuint index, const GLdouble* v);
void goglVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void goglVertexAttrib3fv(GLuint index, const GLfloat* v);
void goglVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
void goglVertexAttrib3sv(GLuint index, const GLshort* v);
void goglVertexAttrib4Nbv(GLuint index, const GLbyte* v);
void goglVertexAttrib4Niv(GLuint index, const GLint* v);
void goglVertexAttrib4Nsv(GLuint index, const GLshort* v);
void goglVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void goglVertexAttrib4Nubv(GLuint index, const GLubyte* v);
void goglVertexAttrib4Nuiv(GLuint index, const GLuint* v);
void goglVertexAttrib4Nusv(GLuint index, const GLushort* v);
void goglVertexAttrib4bv(GLuint index, const GLbyte* v);
void goglVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void goglVertexAttrib4dv(GLuint index, const GLdouble* v);
void goglVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void goglVertexAttrib4fv(GLuint index, const GLfloat* v);
void goglVertexAttrib4iv(GLuint index, const GLint* v);
void goglVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void goglVertexAttrib4sv(GLuint index, const GLshort* v);
void goglVertexAttrib4ubv(GLuint index, const GLubyte* v);
void goglVertexAttrib4uiv(GLuint index, const GLuint* v);
void goglVertexAttrib4usv(GLuint index, const GLushort* v);
void goglVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* pointer);
void goglVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
void goglViewport(GLint x, GLint y, GLsizei width, GLsizei height);
void goglWindowPos2d(GLdouble x, GLdouble y);
void goglWindowPos2dv(const GLdouble* v);
void goglWindowPos2f(GLfloat x, GLfloat y);
void goglWindowPos2fv(const GLfloat* v);
void goglWindowPos2i(GLint x, GLint y);
void goglWindowPos2iv(const GLint* v);
void goglWindowPos2s(GLshort x, GLshort y);
void goglWindowPos2sv(const GLshort* v);
void goglWindowPos3d(GLdouble x, GLdouble y, GLdouble z);
void goglWindowPos3dv(const GLdouble* v);
void goglWindowPos3f(GLfloat x, GLfloat y, GLfloat z);
void goglWindowPos3fv(const GLfloat* v);
void goglWindowPos3i(GLint x, GLint y, GLint z);
void goglWindowPos3iv(const GLint* v);
void goglWindowPos3s(GLshort x, GLshort y, GLshort z);
void goglWindowPos3sv(const GLshort* v);
char *goglInit();
